// <auto-generated />
using System;
using Budget.Data.Budget.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Budget.Migrations
{
    [DbContext(typeof(BudgetDBContext))]
    [Migration("20251003082355_sqlite.Update_budgetMensuelEntity")]
    partial class sqliteUpdate_budgetMensuelEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Budget.Data.Entities.BudgetMensuelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Annee")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mois")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BudgetsMensuels");
                });

            modelBuilder.Entity("Budget.Data.Entities.CreditEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Echeance")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MontantTotal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Credits");
                });

            modelBuilder.Entity("Budget.Data.Entities.DepenseFixeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Actif")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DatePrelevement")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Montant")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DepensesFixes");
                });

            modelBuilder.Entity("Budget.Data.Entities.TransactionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BudgetMensuelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CreditId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Montant")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BudgetMensuelId");

                    b.HasIndex("CreditId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Budget.Data.Entities.TransactionEntity", b =>
                {
                    b.HasOne("Budget.Data.Entities.BudgetMensuelEntity", "BudgetMensuel")
                        .WithMany("Transactions")
                        .HasForeignKey("BudgetMensuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Budget.Data.Entities.CreditEntity", "Credit")
                        .WithMany("Transactions")
                        .HasForeignKey("CreditId");

                    b.Navigation("BudgetMensuel");

                    b.Navigation("Credit");
                });

            modelBuilder.Entity("Budget.Data.Entities.BudgetMensuelEntity", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Budget.Data.Entities.CreditEntity", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
